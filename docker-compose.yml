version: '3'

networks:
    app:

services:
    nginx:
        container_name: nginx
        build:
            context: ./docker
            dockerfile: nginx.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel_react}
        restart: unless-stopped
        ports:
            - 8000:8000
        volumes:
            - ./src:/var/www/html
            - .env:/var/www/html/.env
        depends_on:
            - php
            - mysql
            - phpmyadmin
            - redis
            - laravel-queue
            - laravel-cron
            - mailhog
        networks:
            - app
    
    php:
        container_name: php
        build:
            context: ./docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel_react}
        ports:
            - ":9000"
        volumes:
            - ./src:/var/www/html
            - .env:/var/www/html/.env
        networks:
            - app

    mysql:
        image: mariadb:11.2
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - 3307:3306
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./docker/mysql:/var/lib/mysql
        networks:
            - app

    redis:
        image: redis:alpine
        container_name: redis
        restart: unless-stopped
        ports:
            - 6380:6379
        networks:
            - app

    laravel-cron:
        container_name: laravel-cron
        build:
            context: ./docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel}
        volumes:
            - ./src:/var/www/html
            - .env:/var/www/html/.env
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: ['php', '/var/www/html/artisan', 'schedule:work']
        networks:
            - app

    laravel-queue:
        container_name: laravel-queue
        build:
            context: ./docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel_react}
        volumes:
            - ./src:/var/www/html
            - .env:/var/www/html/.env
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: ['php', '/var/www/html/artisan', 'queue:work']
        networks:
            - app

    mailhog:
        image: mailhog/mailhog:latest
        container_name: mailhog
        logging: 
            driver: 'none'
        ports:
            - 1025:1025
            - 8025:8025
        networks:
            - app

    phpmyadmin:
        image: phpmyadmin:5.2.0
        container_name: phpmyadmin
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: ${DB_HOST}
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
            PMA_PRT: ${DB_PORT}
        depends_on:
            - mysql
        ports:
            - 8888:80
        networks:
            - app
    
    laravel-migration-seed:
        container_name: laravel-migration-seed
        build:
            context: ./docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel_react}
        volumes:
            - ./src:/var/www/html
            - .env:/var/www/html/.env
        depends_on:
            - mysql
        profiles: ["migrate-seed"]
        working_dir: /var/www/html
        entrypoint: ["/bin/sh", "-c"]
        command:
        - |
            php artisan migrate
            php artisan db:seed
        networks:
            - app

    composer:
        container_name: composer
        build:
            context: ./docker
            dockerfile: composer.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel_react}
        volumes:
            - ./src:/var/www/html
            - .env:/var/www/html/.env
        working_dir: /var/www/html
        depends_on:
            - php
        user: ${USER:-laravel_react}
        profiles: ["composer"]
        entrypoint: ['composer', '--ignore-platform-reqs']
        networks:
            - app
    
    artisan:
        container_name: artisan
        build:
            context: ./docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel_react}
        volumes:
            - ./src:/var/www/html
            - .env:/var/www/html/.env
        depends_on:
            - mysql
        working_dir: /var/www/html
        profiles: ['artisan']
        entrypoint: ['php', '/var/www/html/artisan']
        networks:
            - app

    npm:
        container_name: npm
        image: node:alpine
        volumes:
            - ./src:/var/www/html
            - .env:/var/www/html/.env
        ports:
            - 3000:3000
            - 3001:3001
        working_dir: /var/www/html
        profiles: ["npm"]
        entrypoint: ["npm"]
        networks:
            - app